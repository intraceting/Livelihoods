{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Helvetica};}
{\f34\froman\fcharset238\fprq2 Times New Roman CE;}{\f35\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f37\froman\fcharset161\fprq2 Times New Roman Greek;}{\f38\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f39\froman\fcharset186\fprq2 Times New Roman Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\sa240\nowidctlpar\adjustright \fs20 \snext0 Normal;}{
\s1\fi-432\li432\sb240\sa240\keepn\nowidctlpar\tx432\adjustright \b\f1\fs28\kerning28 \sbasedon0 \snext0 heading 1;}{\s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\tx576\adjustright \b\i\f1 \sbasedon0 \snext0 heading 2;}{
\s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\adjustright \b \sbasedon0 \snext0 heading 3;}{\s4\fi-864\li864\sb240\sa240\keepn\nowidctlpar\tx864\adjustright \b\i \sbasedon0 \snext0 heading 4;}{\s5\fi-1008\li1008\sb240\sa60\nowidctlpar
\tx1008\adjustright \f1\fs22 \sbasedon0 \snext0 heading 5;}{\s6\fi-1152\li1152\sb240\sa60\nowidctlpar\tx1152\adjustright \i\f1\fs22 \sbasedon0 \snext0 heading 6;}{\s7\fi-1296\li1296\sb240\sa60\nowidctlpar\tx1296\adjustright \f1\fs20 \sbasedon0 \snext0 
heading 7;}{\s8\fi-1440\li1440\sb240\sa60\nowidctlpar\tx1440\adjustright \i\f1\fs20 \sbasedon0 \snext0 heading 8;}{\s9\fi-1584\li1584\sl240\slmult0\nowidctlpar\tx1584\adjustright \fs2\lang0 \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive 
Default Paragraph Font;}{\s15\qc\sb240\sa60\nowidctlpar\adjustright \b\f1\fs32\kerning28 \sbasedon0 \snext15 Title;}{\s16\qc\sa60\nowidctlpar\adjustright \f1 \sbasedon0 \snext16 Subtitle;}{\s17\sa240\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20 
\sbasedon0 \snext17 header;}{\s18\sa240\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20 \sbasedon0 \snext18 footer;}{\*\cs19 \additive \sbasedon10 page number;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}}{\*\listoverridetable{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1
\levelold\levelspace0\levelindent360{\leveltext\'01o;}{\levelnumbers;}}}\ls1}}{\info{\title 1}{\author Paul J. Leach}{\operator Paul Leach}{\creatim\yr1997\mo3\dy25\hr11\min41}{\revtim\yr1997\mo3\dy25\hr11\min43}{\printim\yr1997\mo3\dy25\hr11\min43}
{\version3}{\edmins2}{\nofpages6}{\nofwords2608}{\nofchars14869}{\*\company MSFT}{\nofcharsws0}{\vern71}}\margl1008\margr864 \widowctrl\ftnbj\aenddoc\aftnnar\hyphcaps0\formshade\viewkind4\viewscale100 \fet0\sectd 
\psz1\linex0\endnhere\titlepg\sectdefaultcl {\header \pard\plain \s17\sa240\nowidctlpar\tqc\tx4320\tqr\tx9360\adjustright \fs20 {\i Preliminary}{\tab CIFS Security Considerations\tab May change without notice
\par }}{\footer \pard\plain \s18\sa240\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20 {Paul J. Leach, Microsoft\tab [Page }{\field{\*\fldinst {\cs19  PAGE }}{\fldrslt {\cs19\lang1024 6}}}{\cs19 ]\tab }{\field{\*\fldinst {\cs19  DATE }}{\fldrslt {
\cs19\lang1024 03/25/97}}}{
\par }}{\footerf \pard\plain \s18\sa240\nowidctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20 {Paul J. Leach, Microsoft\tab [Page }{\field{\*\fldinst {\cs19  PAGE }}{\fldrslt {\cs19\lang1024 1}}}{\cs19 ]\tab }{\field{\*\fldinst {\cs19  DATE }}{\fldrslt {
\cs19\lang1024 03/25/97}}}{
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\qc\sb240\sa60\nowidctlpar\adjustright \b\f1\fs32\kerning28 {{\*\bkmkstart _Toc365655386}
CIFS Security Considerations Update
\par }\pard\plain \s16\qc\sa60\nowidctlpar\adjustright \f1 {Paul J. Leach
\par Microsoft
\par }{\i\fs20 Preliminary Draft \endash  do not cite
\par }{\fs16 Author's draft: 4 
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {
This is a preliminary draft of an update to the security considerations section of the CIFS specification, corresponding to an update to the security protocols described in companion documents. It is supplied here as a standalone documen
t for ease of review; if accepted and implemented, it will be incorporated into a future release of the CIFS specification. (This specification may change without notice, and should not be construed as a product commitment from Microsoft Corporation.)

\par }\pard\plain \s1\fi-432\li432\sb240\sa240\keepn\nowidctlpar\widctlpar\tx432\outlinelevel0\adjustright \b\f1\fs28\kerning28 {1\tab Security Considerations{\*\bkmkend _Toc365655386}
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {There are four authentication mechanisms, each with their own strengths and weaknesses, as well as attacks that are independent of the authentication protocol.
\par If the CIFS authentication protocol is correctly implemented,
 then for all the attacks and weaknesses listed, there are client or server configurations or other countermeasures to defend against them. At the highest configurable security setting, with well-chosen passwords, the best known attack is as hard as attac
king DES with chosen plaintext. 
\par This section is for the guidance of implementers, to help them avoid implementation pitfalls, and for system administrators, to help them choose a security configuration that meets their installation's security requirements.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\widctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {{\*\bkmkstart _Toc359296902}{\*\bkmkstart _Toc365655387}1.1\tab Security models
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {There are two security models \endash 
 share level security and user level security. Even though the models are different, each model involves users demonstrating knowledge of a password to gain access, and the authe
ntication protocols that prove knowledge of the password are the same for both models. 
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {1.1.1\tab Share level {\*\bkmkend _Toc359296902}{\*\bkmkend _Toc365655387}security
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {When using share level security, there are no per-user passwords; instead, knowledge of the read or write password 
is what gives read or write access to a share. A session is established by connecting to a share using the SMB_TREE_CONNECT request, using one of the session authentication mechanisms described below. 
\par Since the same passwords must be disclosed to many peo
ple to be used, and hence known by many people, while the authentication protocols are as strong as for user-level protection, share level security is much weaker that user level security in practice. This scheme may be appropriate for small workgroups of
 trusted/cooperative users, and where the overhead of managing user accounts is deemed to be too high. The fewer the number of people who know any given password, the better; this is especially true for administrative passwords.
\par Share level protection is at the discretion of the server, and does not compromise the ability of any other client or server to use stronger security amongst themselves.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc359296903}{\*\bkmkstart _Toc365655388}1.1.2\tab User level security
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {When using user level security, users authenticate themselves 
by proving that they know a password which is known only to that user. A session is established by connecting to a server using the SMB_SESSION_SETUP_ANDX request, using one of the session authentication mechanisms described below. Thereafter, the identit
y of the user determines the access allowed to the resources on the server, not knowledge of the password.
\par As discussed above, user level security is usually preferable to  share level security. In addition, it can allow access control at a per-resource granularity, instead of at the granularity of the whole share.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\widctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {1.2\tab Attacks on session authentication with plaintext password{\*\bkmkend _Toc359296903}{\*\bkmkend _Toc365655388}s
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {This authentication protocol sends the client's password in the clear. It is thus completely open to an eav
esdropping attack. If eavesdropping is not possible, clients can have their passwords stolen by counterfeit servers. Password guessing attacks are possible, with success dependant on how well-chosen the passwords are. 
\par Passwords sent to such servers should never be the same as passwords used for more secure servers.
\par It should be used only when absolutely needed for backwards compatibility, and only where the risks of eavesdropping is deemed acceptable, such as relatively isolated networks or on networks with secure (encrypted and/or authenticated) link layers.
\par In general, unless there are very special and well considered reasons, this protocol should not be used.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\widctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {1.3\tab Attacks on session authentication using LM session key
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {This authentication protocol is more secure than plaintext password authentication, because passwords are never seen in the clear on the network.
\par The following sections analyze the vulnerability of this protocol to attack using the following techniques:
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 o\tab}}\pard \fi-360\li360\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnstart1\pnindent360 {\pntxtb o}}\ls1\adjustright {Eavesdropping/ brute force attacks
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 o\tab}}\pard \fi-360\li360\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnstart1\pnindent360 {\pntxtb o}}\ls1\adjustright {Chosen plaintext attack
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 o\tab}}\pard \fi-360\li360\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnstart1\pnindent360 {\pntxtb o}}\ls1\adjustright {Dictionary attacks
\par }\pard \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {
These attacks, if successful, compromise the client's password, and allow the attacker access to the client's files even after the client's session has ended. Because the same protocol using the NT session key is stronger, its use is recommended except wh
ere backwards compatibility is required.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel2\adjustright \b {1.3.1\tab Eavesdropping/ brute force attacks
\par }\pard\plain \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright \fs20 {
With the session authentication protocol , an eavesdropper can acquire challenge/response pairs. It can then test a password by using it to generate a key, encrypting the chal
lenge, and comparing it to the corresponding response; by exhaustively trying all possible passwords, the correct one will eventually be found. This is as hard as finding a DES key given a known plaintext/cryptext pair.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc359296907}{\*\bkmkstart _Toc365655392}1.3.2\tab Chosen plaintext attacks
{\*\bkmkend _Toc359296907}{\*\bkmkend _Toc365655392}
\par }\pard\plain \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright \fs20 {
With the session authentication protocol, a "man-in-the-middle" or a counterfeit server can choose the challenge which the client will then encrypt using a key derived from the client's password. The ability t
o choose the plaintext to be encrypted is known to make breaking many ciphers much easier, and it is possible that it also may help break cipher-based one-way functions such as the one used to compute the LM session key.
\par However, no way to break the DES one-way function used in the session authentication protocol using chosen plaintext is currently known.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc359296908}{\*\bkmkstart _Toc365655393}1.3.3\tab Dictionary attacks
\par }\pard\plain \s4\fi-864\li864\sb240\sa240\keepn\nowidctlpar\tx864{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel3\adjustright \b\i {1.3.3.1\tab Online dictionary attacks
\par }\pard\plain \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright \fs20 {If the attacker can eavesdrop, but can not execute a chosen plaintext
 attack, then it can test any overheard challenge/response pair against a list of common words. Such a list is usually much smaller than the total number of possible passwords. The cost of computing the response for each password on the list is paid once 
for each challenge.
\par }\pard\plain \s4\fi-864\li864\sb240\sa240\keepn\nowidctlpar\tx864{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel3\adjustright \b\i {1.3.3.2\tab Stored dictionary attacks{\*\bkmkend _Toc359296908}{\*\bkmkend _Toc365655393}
\par }\pard\plain \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright \fs20 {
If the attacker can execute a chosen plaintext attack, the attacker can compute the session key for many common words and use it to precompute the response to a challenge of its
 choice, and store a dictionary of (response, password) pairs. Such precomputation can often be done in parallel on many machines. It can then use the chosen plaintext attack to acquire a response corresponding to that challenge, and just look up the pass
word in the dictionary. Even if most passwords are not in the dictionary, some might be. Since the attacker gets to pick the challenge, the cost of computing the response for each password on the list can be amortized over many passwords.
\par The countermeasure
 against both these types of dictionary attack is to require users to choose passwords that are not common words. For the second type of attack, if the key space derived from passwords is large enough, then it will be infeasible to store the dictionary. 

\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc359296906}{\*\bkmkstart _Toc365655391}{\*\bkmkstart _Toc359296909}
{\*\bkmkstart _Toc365655394}1.3.4\tab Small key space{\*\bkmkend _Toc359296906}{\*\bkmkend _Toc365655391} resulting from badly chosen passwords
\par }\pard\plain \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright \fs20 {Even when passwords are not allowed to be common words, the combination of the use of only uppercase characters, the us
ual user practice of  choosing passwords that have alpha and perhaps numeric characters, plus the fact that the LM session key construction treats the upper and lower halves of the 14 bytes key almost identically means that the key space may be rather sma
l
l. Enumerating 7 uppercase characters and digits leads to a key space of 36**7, or 78.3 billion combinations. When this mechanism was introduced nearly a decade ago, this was probably an adequately large key space, but with today's much more powerful syst
ems, it would now be small enough to make a brute force search expensive but feasible upon a challenge/response pair obtained via an eavesdropping attack if the attacker had many powerful hosts available or special purpose hardware.
\par The countermeasure to th
is problem is to require users to choose passwords that lead to more possible combinations. For example, just requiring one randomly chosen punctuation character in a password increases the key space by a factor of 13. If all characters of the password ar
e chosen at random, there are 68**7, or 6.7 trillion, combinations. If this is still inadequate, then the NT session key should be used.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\widctlpar\tx576{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\outlinelevel1\adjustright \b\i\f1 {{\*\bkmkend _Toc359296909}{\*\bkmkend _Toc365655394}1.4\tab 
Attacks on session authentication using NT session keys
\par }\pard\plain \sa240\nowidctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright \fs20 {The session authentication protoco
l using NT session keys is the same as when using LM session keys; only the key construction is different. As a result, it may be attacked using the same techniques. However, because it uses MD4 to generate the keying material from the password, and becau
s
e it preserves the password's case, the key space of this protocol is essentially the full 56 bits that single DES allows; this is probably an acceptable length for most purposes (although future dialects may use triple-DES for more assurance). It is stil
l
 subject to the same chosen plaintext and dictionary attacks as above, and these will be feasible if passwords are badly chosen. As above, the countermeasure is to make sure that passwords are well-chosen, and long enough to have at least 56 bits of rando
mness.
\par }\pard \sa240\nowidctlpar\widctlpar{\*\pn \pnlvlcont\ilvl12\ls0\pnrnot0\pndec }\ilvl12\adjustright {Other considerations:
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 o\tab}}\pard \fi-360\li360\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnstart1\pnindent360 {\pntxtb o}}\ls1\adjustright {
Transforming the password into Unicode leaves a pattern of alternating zeros and characters in the input to MD4.  It is possible that this may allow MD4 to be reversed much more easily, although there is currently no known way to exploit this.
\par {\pntext\pard\plain\fs20 \hich\af0\dbch\af0\loch\f0 o\tab}}\pard \fi-360\li360\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnstart1\pnindent360 {\pntxtb o}}\ls1\adjustright {
MD4 is known to be weak with respect to collisions, compared to MD5 and SHA.  It is possible that there may be a way to exploit this to attack its one-wayness, or to exploit the collision properties to limit key search time, although 
there is currently no known way to do so.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\widctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {{\*\bkmkstart _Toc365655396}1.5\tab Other attacks{\*\bkmkend _Toc365655396}
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc365655397}1.5.1\tab Connection{\*\bkmkend _Toc365655397} hijacking
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {
Any attacker that can inject packets into the network that appear to the server to be coming from a particular client, can hijack that client's connection. Once a connection is set up and the client has authenticated, if subsequent packets are not authent
icated the attacker can inject requests to read, write, or delete files to which the client has access.
\par Doing so requires that the injected packets have the right transport level sequence numbers. If the attacker can not eavesdrop, this will have very low p
robability of success, since the 32 bit initial sequence numbers may be randomly chosen. Even if it can eavesdrop, then it needs "gag" the client, otherwise the client will start getting packets with bad sequence numbers and reset the connection. This req
u
ires that the attacker is on a host on the same LAN segment as the client or server and has modified the hosts OS to get direct access to its network card, or has taken over a router between the client and the server. It is significantly more difficult to
 hijack a connection than to eavesdrop, and doing so only permits the attacker to access files as the client for the duration of the session. (See RFC 1948.)
\par The countermeasure against connection hijacking is to configure the client or server to require the use of message authentication.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc365655398}1.5.2\tab Downgrade attack{\*\bkmkend _Toc365655398}s
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {If a client is not appropriately configured, a "man-in-the-middle" can remove the bit in the SMB_COM_NEGPROT response that says the server supports challenge/response, thus f
ooling a client into thinking that it should supply a plaintext password. 
\par The countermeasure against downgrade attacks is to configure the client or server to require either session or message authentication.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\widctlpar\tx720\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc365655399}1.5.3\tab Rogue servers and spoofing by counterfeit servers{\*\bkmkend _Toc365655399}
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {
A counterfeit server is one that spoofs the DNS name resolution process so that the client gets the counterfeit's IP address instead of the genuine server's IP address, thus fooling the client into connecting to the coun
terfeit while believing it is connecting to the genuine server. 
\par A rogue server is a server that entices a client into accessing it, and uses some aspect of the interaction to try to mount an attack.
\par Counterfeit and rogue servers are not detectable by the session authentication mechanism, which only authenticates clients to servers.
\par If a client is not appropriately configured, a rogue or counterfeit server can use the downgrade attack above to obtain a client's password. A counterfeit server can also execut
e a denial of service attack by ignoring the client's requests or returning bogus results.
\par A rogue or counterfeit server can authenticate to a real server as any client that attempts to log in to it, by getting the client to respond to the challenge from the real server.
\par The countermeasure against rogue or counterfeit servers is to require use of the message authentication protocol., which provides mutual authentication. Also, such attacks can be mitigated by deployment of DNSSEC.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {{\*\bkmkstart _Toc365655400}1.5.4\tab Active message modification attacks
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {
If a client or server not appropriately configured, a router or a host on a LAN segment between the client and server may be able mount an "active message modification attack": it may be able to modify messages sent between the client and server.
\par The countermeasure to such attacks is to use the message authentication protocol. Active message modification attacks are prevented, because unless the MAC key is known, tampering with the message will cause the MAC to fail to validate. 
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {1.5.5\tab MAC key attacks
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {The best attack on the MAC key is to attack the session authentication protocol using one of the techniques above to obtain the password, and then just compute the MAC key per the specification \endash 
 which reduces to brute force search of the key space. (Message authentication is intended to provide mutual authentication on each message, not increased password strength.)
\par The next best attack is a brute force search of the 128 bit key space. The message authentication protocol does not se
nd the complete output of the keyed-MD5 hash; only half of it. As a result, it does not expose a full (plaintext, cryptext) pair to an attacker. This will make discovery of the MAC key more difficult, since there should be many potential MAC keys K' with 
t
he property that  it produces the same first 8 bytes of the hash as the actual key K.  However, if an attacker sees a second authenticated message, then the chances that K' produces the MACs on both of them correctly will be 1 in 2**128, so K' is then qui
te likely the actual key.
\par Since the key is formed from both the session key (which is per-user and long-lived) and the response (which is per-session), large quantities of data are not hashed using a long-lived key, which might subject it to attack.
\par See RFC
 1828 for an example of keyed MD5 applied to IP security. If not used properly, keyed MD5 may have weaknesses as a MAC. Iterative hashes such as MD5 may be subject to message extension attacks and to cryptanalysis [Kal 95].  The CIFS MAC construction is n
o
t subject to the problems identified in [Kal 95], because the text contains an explicit length, which prevents message extension attacks; and because there are always two iterations of the compression function, and only 64 bits of the hash are output, whi
ch prevents known cryptanalysis techniques.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {1.5.6\tab Replay attacks
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {An attacker who can eavesdrop and send packets can attempt a replay attack: resend a request or response previously overheard.
\par The countermeasure against replay attacks is to use the message a
uthentication protocol. Replay is prevented, because each request and response has a unique, strictly increasing sequence number which is incorporated into the computation of the MAC. (Multi-message requests and responses all have the same request or resp
onse sequence number, but contain a unique fragment sequence number which prevents replay.)
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {1.6\tab Other considerations
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {1.6.1\tab Privacy
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {This version of the CIFS protocol does not support privacy protection. In order to obtain it, one may use a privacy protecting
 network layer protocol (such as IPSec, PPTP, or L2F) or a privacy protecting transport layer protocol (such as SSL or TLS) to transport CIFS protocol messages.
\par }\pard\plain \s3\fi-720\li720\sb240\sa240\keepn\nowidctlpar\tx720\outlinelevel2\adjustright \b {1.6.2\tab Performance
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {
The use of message authentication causes the complete contents of each message to be hashed using MD5, which can decrease performance. Very high speed implementations of MD5 are available (20 megabytes/sec on a 166 mhz Pentium) that can minimize the impac
t.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {1.7\tab Storing Passwords S{\*\bkmkend _Toc365655400}ecurely
\par }\pard\plain \sa240\nowidctlpar\widctlpar\adjustright \fs20 {
The passwords used in any of the authentication mechanisms used by this protocol have to be protected from access from over the network and from physical access. If the server does not support access control at
 the individual file level, but only at the file tree level, then password files can not be placed in a file tree that is accessible from the network, as all files in such a tree have to be at least equally readable.
\par }\pard\plain \s2\fi-576\li576\sb240\sa240\keepn\nowidctlpar\tx576\outlinelevel1\adjustright \b\i\f1 {References
\par }\pard\plain \sa240\nowidctlpar\adjustright \fs20 {[FIPS 81] DES, FIPS PUB xxx
\par [RFC 1320] RFC 1320, R. Rivest, The MD4 Message-Digest Algorithm
\par [RFC 1321] RFC 1321, R. Rivest, The MD5 Message-Digest Algorithm
\par [RFC 1828] RFC 1828, P. Metzger, W. Simpson, "IP Authentication using Keyed MD5", August 1995
\par }\pard \sa240\nowidctlpar\pnrnot1\adjustright {\{Kal 95] B. Kaliski, M.Robshaw,  "Message Authentication with MD5",  CryptoBytes, Sping 1995, RSA Inc, (http://www.rsa.com/rsalabs/pubs/cryptobytes/spring95/md5.htm)
\par }}